{"version":3,"sources":["components/ProjectCard.js","components/Project.js","components/Banner.js","components/Greetings.js","components/Profile.js","components/Pages.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ProjectCard","props","project","key","useState","starCount","setStarCount","watchCount","setWatchCount","useEffect","timer1","setTimeout","fetch","repo","method","then","response","status","json","data","console","log","catch","err","error","delaySecond","clearTimeout","Card","className","style","width","Img","varient","src","process","logo","alt","projectName","Body","Title","href","url","rel","target","Text","description","icon","faStar","faEye","Footer","stacks","map","stack","idx","Project","CardDeck","profile","projects","i","React","Component","Banner","Jumbotron","Container","Greetings","Row","Col","Profile","Table","striped","bordered","hover","skills","skill","name","items","item","_idx","Pages","state","activeTab","toggle","bind","e","this","id","setState","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","tabs","NavItem","NavLink","onClick","TabContent","TabPane","tabId","faLinkedin","faGithub","App","webSiteName","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb810e0e.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\";\nimport React, { useState, useEffect } from 'react';\n// get our fontawesome imports\nimport { faEye, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function ProjectCard(props){\n    const {project, key} = props;\n    const delaySecond = 3;\n    const [starCount, setStarCount] = useState(0);\n    const [watchCount, setWatchCount] = useState(0);\n\n    useEffect(() => {\n      let timer1 = setTimeout(() => {\n          fetch(\"https://ncyr2o8m84.execute-api.us-east-2.amazonaws.com/default/getFelixPublicGitHubInfo?repo=\" + project.repo, {\n            method: 'GET',\n          }).then((response) => {\n              if (response.status !== 200) {\n                console.log('Looks like there was a problem. Status Code: ' + response.status);\n                return;\n              }\n              response.json().then((data) => {\n                console.log(data);\n                setStarCount(data.starCount);\n                setWatchCount(data.watchCount);\n              });\n          }).catch((err) => {\n            console.error(err);\n          });;\n      }, delaySecond * 1000);\n      // this will clear Timeout\n      // when component unmount like in willComponentUnmount\n      return () => {\n        clearTimeout(timer1);\n      };\n    });\n    return (\n        <Card key={key} className=\"card\" style={{width: '18rem'}}>\n          <Card.Img className=\"cardImage\" varient=\"top\" src={process.env.PUBLIC_URL+project.logo} alt={project.projectName}/>\n          <Card.Body>\n            <Card.Title><a href={project.url} rel=\"noopener noreferrer\" target=\"_blank\" >{project.projectName}</a></Card.Title>\n            <Card.Text>{project.description}</Card.Text>\n            <Card.Text>\n              <span className=\"icon\"><FontAwesomeIcon icon={faStar} />:{starCount}</span>\n              <span className=\"icon\"><FontAwesomeIcon icon={faEye} />:{watchCount}</span>\n            </Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <ul>\n              {project.stacks.map((stack, idx) => {\n                return <li key={idx}>\n                  {stack}\n                </li>\n              })}\n            </ul>\n          </Card.Footer>\n      </Card>    \n    );\n};","import React from \"react\";\nimport profile from \"../profile\";\nimport { CardDeck } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCard\";\n\nclass Project extends React.Component {\n  render() {\n    return <CardDeck className=\"card-deck pages\">\n          {profile.projects.map(function (project, i) {\n            return (\n                <ProjectCard project={project} key={i}/>   \n            );\n          })}\n        </CardDeck>\n  }\n}\nexport default Project;","import React from 'react';\nimport {Jumbotron, Container } from \"reactstrap\";\n\nexport default function Banner(){\n    return (\n        <Jumbotron>\n            <Container>\n                <h1 className=\"banner\">Felix Ho</h1>\n                <div>\n                    <p className=\"desc\">Open for software engineer opportunities</p>\n                </div>\n            </Container>\n        </Jumbotron>\n    );\n}","import React from \"react\";\nimport { Container, Row, Col} from \"reactstrap\";\n\nclass Greetings extends React.Component {\n    render() {\n        return <Container>\n            <Row>\n                <Col className=\"page\">\n                    <p>Hi, this static website is using for exhibiting my worked projects.</p>\n                    <p>Feel free to contact me via Linkedin. (Link at the bottom)</p>\n                </Col>\n            </Row>\n        </Container>\n    }\n}\nexport default Greetings;","import React from 'react';\nimport {Table} from 'reactstrap';\nimport profile from \"./profile.json\";\n\nclass Profile extends React.Component {\n  render() {\n    return <div className=\"page\">\n      <h2>Technical Skills</h2>\n      <Table striped bordered hover>\n      <thead>\n          <tr>\n              <th>Area</th>\n              <th>Detail</th>\n          </tr>\n      </thead>\n      <tbody>\n          {\n            profile.skills.map((skill, idx) => {\n              return (\n                <tr key={idx}>\n                  <td>{skill.name}</td>\n                  <td>\n                      <ul>\n                        {\n                          skill.items.map((item, _idx) => {\n                              return <li key={_idx}>{item}</li>\n                          })\n                        }\n                      </ul>\n                  </td>\n                </tr>\n              );\n            })\n          }\n\n      </tbody>\n    </Table>\n  </div>\n  }\n}\n\nexport default Profile;","import React from 'react';\nimport {TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport Project from './Project';\nimport Banner from './Banner';\nimport Greetings from './Greetings';\nimport Profile from './Profile';\nimport { Navbar } from 'react-bootstrap';\n\nclass Pages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '0'\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(e){\n    if (this.state.activeTab !== e.target.id) {\n      this.setState({\n        activeTab: e.target.id\n      });\n    }\n  }\n  render() {\n    return <div>\n        <Navbar className=\"navbar\" bg=\"light\" expand=\"lg\">\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink id=\"0\" onClick={this.toggle}>\n                  Introduction\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink id=\"1\" onClick={this.toggle}>\n                  Github Project Galley\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink id=\"2\" onClick={this.toggle}>\n                  Skills Profile\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Banner />\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"0\">\n            <Greetings/>\n          </TabPane>\n          <TabPane tabId=\"1\">\n            <Project/>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Profile/>\n          </TabPane>\n        </TabContent>\n    </div>;\n  }\n}\n\nexport default Pages;","import React from 'react';\nimport {Container} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <hr/>\n        <Container>\n          <a href=\"https://www.linkedin.com/in/felix-ho-b69878155/\" rel=\"noopener noreferrer\" target=\"_blank\"><FontAwesomeIcon icon={faLinkedin} /></a>\n          <a href=\"https://github.com/Felixho19\" rel=\"noopener noreferrer\" target=\"_blank\"><FontAwesomeIcon icon={faGithub}  /></a>\n        </Container>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Pages from './components/Pages';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n       webSiteName : \"Felix's personal website\"\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Pages />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}