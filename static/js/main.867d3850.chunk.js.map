{"version":3,"sources":["components/TopBar.js","components/Experience.js","components/Education.js","components/Profile.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["TopBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","name","setState","react_default","a","createElement","Navbar","color","dark","expand","Container","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","React","Component","getDuration","duration","years","parseInt","months","Experience","Row","Col","profile","experiences","map","experience","i","moment","locale","totalDuration","roles","reduce","cnt","role","startDate","timeEnd","currentJob","Date","endDate","diff","Number","asMonths","toPrecision","key","Media","left","top","url","object","src","logo","alt","companyName","body","heading","title","format","location","description","Education","studies","study","institute","value","graduationYear","durationInYears","certifications","certification","verification","verificationLink","issueDate","expiryDate","issuer","Profile","activeTab","tab","_this2","Jumbotron","summary","tabs","classnames","active","TabContent","TabPane","tabId","components_Experience","components_Education","Footer","index_es","icon","faLinkedin","faGithub","App","components_TopBar","components_Profile","components_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.867d3850.chunk.js","sourcesContent":["import React from 'react';\nimport {Container, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nclass TopBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      name: \"Felix\"\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <Container>\n          <NavbarBrand href=\"/\">\n            <span>{this.state.name}</span>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle}/>\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/profile/\">Profile</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default TopBar;","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport profile from \"../profile\";\nimport moment from \"moment\";\nimport { Media } from \"reactstrap\";\n\nfunction getDuration(duration) {\n  const years = parseInt(duration / 12);\n  const months = (duration > 12)? duration % 12 : duration\n  return (years > 0? years + \" year\" + (years > 1? \"s\": \"\") + \" and \" : \"\") + (months > 0? months + \" month\" + (months > 1? \"s\": \"\") : \"\");\n};\n\nclass Experience extends React.Component {\n  render() {\n    return <Container>\n      <Row>\n        <Col>\n          {profile.experiences.map(function (experience, i) {\n            moment.locale('en');\n\n            const totalDuration = experience.roles.reduce(function (cnt, role) {\n              const startDate = moment(role.startDate);\n              const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\n              const duration = moment.duration(timeEnd.diff(startDate));\n              return Number(cnt) + Number(duration.asMonths().toPrecision(1));\n            }, 0);\n\n            return (\n              <div key={i}>\n                <Media>\n                  <Media left top href={experience.url}>\n                    <Media object src={experience.logo} alt={experience.companyName}/>\n                  </Media>\n                  <Media body>\n                    <Media heading>\n                      <a href={experience.url}>{experience.companyName}</a>\n                      <span className=\"jobTotalDuration\">{getDuration(totalDuration)}</span>\n                    </Media>\n\n                    {experience.roles.map(function (role, i) {\n                      const startDate = moment(role.startDate);\n                      const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\n                      const duration = Number(moment.duration(timeEnd.diff(startDate)).asMonths().toPrecision(1));\n\n                      return <div key={i}>\n                        <h5>{role.title}</h5>\n                        <span\n                          className=\"jobDuration\">{startDate.format('MMM YYYY')} - {role.currentJob ? 'Present' : timeEnd.format('MMM YYYY')} ({getDuration(duration)})</span>\n                        <span className=\"jobLocation\">{role.location}</span>\n                        <p className=\"jobDescription\">{role.description}</p>\n                      </div>\n                    })}\n                  </Media>\n                </Media>\n              </div>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  }\n}\n\nexport default Experience;","import React from 'react';\nimport {Container, Row, Col, Media} from 'reactstrap';\nimport moment from 'moment';\nimport profile from '../profile.json';\n\nclass Education extends React.Component {\n  render() {\n    return <Container>\n      <Row>\n        <Col>\n          {profile.studies.map(function (study, i) {\n            return <Media key={i}>\n              <Media left top href={study.url}>\n                <Media object src={study.logo} alt={study.institute}/>\n              </Media>\n              <Media body>\n                <Media heading>\n                  <a href={study.url}>{study.institute}</a>\n                </Media>\n                {\n                  [\n                    {\n                      \"key\": \"Title\",\n                      \"value\": study.title\n                    },\n                    {\n                      \"key\": \"Graduation Year\",\n                      \"value\": study.graduationYear\n                    },\n                    {\n                      \"key\": \"Duration\",\n                      \"value\": study.durationInYears + \" year(s)\"\n                    }\n                  ].map(function (object, i) {\n                    return <div>\n                      <Row>\n                        <Col className=\"formLabel\">{object.key}:</Col>\n                      </Row>\n                      <Row>\n                        <Col>{object.value}</Col>\n                      </Row>\n                    </div>\n                  })\n                }\n              </Media>\n            </Media>\n          })}\n        </Col>\n      </Row>\n      <br/>\n      <br/>\n      <Row>\n        <Col>\n          <h4>Certifications:</h4>\n          <hr/>\n          {profile.certifications.map(function (certification, i) {\n            const verification = certification.verificationLink ?\n              <Row>\n                <Col>\n                  <a className=\"certificateLink\" href={certification.verificationLink}>See certificate</a>\n                </Col>\n              </Row> : \"\";\n            return <Media key={i}>\n              <Media left top href={certification.url}>\n                <Media object src={certification.logo} alt={certification.title}/>\n              </Media>\n              <Media body>\n                <Media heading>\n                  <a href={certification.url}>{certification.title}</a>\n                </Media>\n                <Row>\n                  <Col>{moment(certification.issueDate).format('MMM YYYY')} - {(certification.expiryDate) ? moment(certification.expiryDate).format('MMM YYYY') : 'Present'}</Col>\n                </Row>\n                <Row>\n                  <Col>{certification.issuer}</Col>\n                </Row>\n                {verification}\n              </Media>\n            </Media>\n          })}\n        </Col>\n      </Row>\n    </Container>\n  }\n}\n\nexport default Education;","import React from 'react';\nimport {Jumbotron, Container, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport classnames from 'classnames';\nimport Experience from \"./Experience\";\nimport Education from './Education'\nimport profile from '../profile.json'\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    return <div>\n      <Jumbotron>\n        <Container>\n          <h1 className=\"display-3\">{profile.title}</h1>\n          <p className=\"lead\">{profile.summary}</p>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <Nav tabs>\n          <NavItem>\n            <NavLink className={classnames({ active: this.state.activeTab === '1' })}\n                     onClick={() => { this.toggle('1'); }}>\n              Experience\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink className={classnames({ active: this.state.activeTab === '2' })}\n                     onClick={() => { this.toggle('2'); }}>\n              Education\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Experience/>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Education/>\n          </TabPane>\n        </TabContent>\n      </Container>\n    </div>;\n  }\n}\n\nexport default Profile;","import React from 'react';\nimport {Container} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <hr/>\n        <Container>\n          <a href=\"https://www.linkedin.com/in/felix-ho-b69878155/\"><FontAwesomeIcon icon={faLinkedin} /></a>\n          <a href=\"https://github.com/Felixho19\"><FontAwesomeIcon icon={faGithub}  /></a>\n        </Container>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport Profile from './components/Profile';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Profile />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}